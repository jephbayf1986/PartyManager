@using PartyManager.WebUI.Data
@using PartyManager.WebUI.State
@using PartyManager.Application.Main.People.Commands
@using PartyManager.Application.Main.Drinks.Queries.Models
@inject PeopleService PeopleService
@inject DrinksService DrinksService
@inject NotifierState Notifier

<div>

    @if (allowCreate)
    {
        <h5>Create New Contact</h5>

        <div class="row form-inline px-8">

            Enter Contact Details:

            <span class="spacer" />
            <EditForm Model="@command" OnValidSubmit="@Create">
                <div class="row">
                    <div class="form-group px-4">
                        First Name:
                        <InputText id="new-person-firstname" @bind-Value="command.FirstName" />
                    </div>

                    <div class="form-group px-2">
                        Last Name:
                        <InputText id="new-person-lastname" @bind-Value="command.LastName" />
                    </div>

                    <div class="form-group px-4">
                        Date of Birth:
                        <InputDate id="new-person-dob" @bind-Value="command.DateOfBirth" />
                    </div>
                </div>

                <div class="row">
                    <div class="form-group px-4">
                        Email:
                        <InputText id="new-person-email" @bind-Value="command.Email" />
                    </div>

                    <div class="form-group px-2">
                        Phone Number:
                        <InputText id="new-person-phone" @bind-Value="command.Phone" />
                    </div>

                    <div class="form-group px-4">
                        Favourite Drink:
                        <InputSelect id="drink-options" class="form-control" @bind-Value="command.FavouriteDrinkId">
                            @if (drinks != null)
                                {
                                <option value="" selected>Select a Drink</option>
                                @foreach (var drink in drinks)
                                {
                                <option value="@drink.Id">@drink.Name</option>
                                }
                            }
                        </InputSelect>
                    </div>

                    <div class="form-group px-1">
                        <button type="submit" class="btn btn-light"><span class="oi oi-check" aria-hidden="true"></span></button>
                        <button class="btn btn-light" @onclick="HideCreateForm" @onclick:preventDefault><span class="oi oi-x" aria-hidden="true"></span></button>
                    </div>
                </div>

            </EditForm>

        </div>

    }
    else
    {
        <button class="btn btn-lg btn-dark" @onclick="@ShowCreateForm">Add a new Contact</button>
    }

</div>

@code {

    [Parameter]
    public EventCallback OnChange { get; set; }

    private bool allowCreate { get; set; }

    private CreatePerson command { get; set; }

    private IEnumerable<DrinkDto> drinks { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        allowCreate = false;

        command = new CreatePerson() { DateOfBirth = DateTime.Now.AddYears(-30) };

        drinks = await DrinksService.GetDrinks();
    }

    private void ShowCreateForm()
    {
        allowCreate = true;
    }

    private void HideCreateForm()
    {
        allowCreate = false;
    }

    private async Task Create()
    {
        var response = await PeopleService.CreatePerson(command);

        if (response.Success)
        {
            allowCreate = false;

            await OnChange.InvokeAsync();
        }

        Notifier.Notify(response);
    }
}
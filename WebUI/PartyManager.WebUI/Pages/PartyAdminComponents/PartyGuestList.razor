@using PartyManager.WebUI.Data
@using PartyManager.Application.Main.Parties.Queries.Models
@using PartyManager.Application.Main.PartyGuests.Commands;
@inject PartyAdminService PartyAdminService

<h3>Guest List</h3>

@if (PartyGuests == null)
{
    <p><em>No-one currently on the guest list!</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Name</th>
                <th>Age</th>
                <th>Drink Choice Confirmed</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var guest in PartyGuests)
            {
            <tr>
                <td>
                    <div>
                        <span class="oi oi-person" aria-hidden="true"></span>
                        @if (guest.IsVIP)
                        {
                            <span class="oi oi-plus" aria-hidden="true"></span>
                        }
                    </div>
                </td>
                <td>@guest.Person.FullName</td>
                <td>@guest.Person.Age</td>
                <td>
                    @if (guest.ChosenDrink != null)
                    {
                        <span class="oi oi-check" aria-hidden="true"></span>
                    }
                </td>
                <td>
                    <a href="" @onclick="@(async () => await RemoveGuest(guest.Id))" @onclick:preventDefault>
                        <span class="oi oi-trash" aria-hidden="true"></span>
                    </a>
                    <a href="/guest/@guest.Id">
                        <span class="oi oi-arrow-circle-right" aria-hidden="true"></span>
                    </a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}
@code {

    [Parameter]
    public IEnumerable<PartyGuestDto> PartyGuests { get; set; }

    private async Task RemoveGuest(int id)
    {
        await PartyAdminService.RemoveGuest(new RemoveGuest { Id = id });
    }
}